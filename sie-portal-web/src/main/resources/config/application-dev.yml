# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
    profiles:
        active: dev
        include: swagger
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use gulp + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://FILL_HOST:FILL_PORT/FILL_DATABASE
        username: FILL_USER
        password: FILL_PASS
    jpa:
        database-platform: io.github.jhipster.domain.util.FixedPostgreSQL82Dialect
        database: POSTGRESQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
    mail:
        host: FILL_HOST
        port: FILL_PORT
        username: FILL_USER
        password: FILL_PASS
        protocol: smtp
        tls: true
        properties.mail.smtp:
            auth: true
            starttls.enable: true
            ssl.trust: smtp.gmail.com
    messages:
        cache-seconds: 1
    thymeleaf:
        cache: false

liquibase:
    contexts: dev

# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alias sie -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 8443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        keyStoreType: PKCS12
#        keyAlias: sie
# ===================================================================
server:
    port: 8080

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
    # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
    cors:
        allowed-origins: "*"
        allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        allowed-headers: "*"
        exposed-headers:
        allow-credentials: true
        max-age: 1800
    security:
        authentication:
            jwt:
                secret: my-secret-token-to-change-in-production
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: sie@localhost
        base-url: http://127.0.0.1:8080
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================

application:
    dataset:
        evolucionElectoral: FILL_EVOLUCION_ELECTORAL_DATASET #Required: path to evolucion electoral dataset. Example: /datasets/ISTAC/C00010A_000007/~latest.json
#    visualizer:
#        showHeader: FILL_SHOW_HEADER #NOT Required: show header. Boolean.
#        showRightsHolder: FILL_SHOW_RIGHTS_HOLDER #NOT Required: show rights holder. Boolean.
#        organisationUrn: FILL_ORGANIZATION_URN #NOT Required: organization urn. Example urn:sdmx:org.sdmx.infomodel.base.Agency=SDMX:AGENCIES(1.0).ISTAC
#    estaticos:
#        navbarUrl: FILL_NAVBAR_ENDPOINT #NOT Required: URL to navbar HTML
#        footerUrl: FILL_FOOTER_ENDPOINT #NOT Required: URL to footer HTML
    metadata:
        endpoint: FILL_COMMON_METADATA_ENDPOINT #Required: common metadata endpoint
        installationType: FILL_INSTALLATION_TYPE #Required: installation type
#        statisticalResourcesInternalKey: FILL_STATISTICAL_RESOURCES_INTERNAL_KEY #NOT Required: statistical resources internal key
#        statisticalResourcesExternalKey: FILL_STATISTICAL_RESOURCES_EXTERNAL_KEY #NOT Required: statistical resources external key
#        structuralResourcesInternalKey: FILL_STRUCTURAL_RESOURCES_INTERNAL_KEY #NOT Required: structural resources internal key
#        structuralResourcesExternalKey: FILL_STRUCTURAL_RESOURCES_EXTERNAL_KEY #NOT Required: structural resources external key
#        indicatorsInternalKey: FILL_INDICATORS_INTERNAL_KEY #NOT Required: indicators internal key
#        indicatorsExternalKey: FILL_INDICATORS_EXTERNAL_KEY #NOT Required: indicators external key
#        statisticalVisualizerKey: FILL_STATISTICAL_VISUALIZER_KEY #NOT Required: statistical visualizer key (external only)
#        statisticalVisualizerApiKey: FILL_STATISTICAL_VISUALIZER_API_KEY #NOT Required: statistical visualizer api key (external only)
#        permalinksEndpointKey: FILL_PERMALINKS_ENDPOINT_KEY #NOT Required: permalinks endpoint key (external only)
#        exportEndpointKey: FILL_EXPORT_ENDPOINT_KEY #NOT Required: export endpoint key (external only)
#        googleTrackingIdKey: FILL_GA_TRACKING_ID_KEY #NOT Required: google analytics tracking id key